buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

group = 'com.algorithmlx'
version = "PreEA1" //A - Alpha; B - Beta R; - Release; E - Experimental(EA - Experimental Alpha; EB - Experimental Beta and etd.) Pre - PreRelease; S - Snapshot

java {
    archivesBaseName = 'AlgoTech'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'official', version: project.mc_version
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=AlgoTech.mixins.json"

            mods {
                AlgoTech {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=AlgoTech.mixins.json"

            mods {
                AlgoTech {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'AlgoTech', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                AlgoTech {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "AlgoTech.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}
jar {
    manifest {
        attributes([
                "Specification-Title": "AlgoTech",
                "Specification-Vendor": "AlgorithmLX",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "AlgorithmLX",
                "MixinConfigs": "AlgoTech.mixins.json",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}